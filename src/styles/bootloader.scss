// Implements just enough of Bootstrap 4 layout utils to be usable.

.container {
    margin: 0 auto;
}

.row {
    display: flex;
}

.col {
    // media queries override this if the screen is large enough
    width: 100%;
    padding-left: $spacer / 2;
    padding-right: $spacer / 2;
}

// mini responsive container, grid and spacers
@each $breakpoint in map-keys($grid-breakpoints) {
    $w: map-get($grid-breakpoints, $breakpoint);
    // Don't insert infix for the smallest size that's always active.
    $infix: if($w > 0, '-#{$breakpoint}', '');
    @media (min-width: $w) {
        .container {
            // make container max width for the smallest size, step otherwise
            width: if($w > 0px, $w, 100%) !important;
        }
        @each $size in map-keys($spacers) {
            $size-point: '#{$infix}-#{$size}';
            $size-value: map-get($spacers, $size);
            .p#{$size-point} { padding: $size-value !important; }
            .pt#{$size-point} { padding-top: $size-value !important; }
            .pr#{$size-point} { padding-right: $size-value !important; }
            .pb#{$size-point} { padding-bottom: $size-value !important; }
            .pl#{$size-point} { padding-left: $size-value !important; }
            .px#{$size-point} {
                padding-left: $size-value !important;
                padding-right: $size-value !important;
            }
            .py#{$size-point} {
                padding-top: $size-value !important;
                padding-bottom: $size-value !important;
            }

            .m#{$size-point} { margin: $size-value !important; }
            .mt#{$size-point} { margin-top: $size-value !important; }
            .mr#{$size-point} { margin-right: $size-value !important; }
            .mb#{$size-point} { margin-bottom: $size-value !important; }
            .ml#{$size-point} { margin-left: $size-value !important; }
            .mx#{$size-point} {
                margin-left: $size-value !important;
                margin-right: $size-value !important;
            }
            .my#{$size-point} {
                margin-top: $size-value !important;
                margin-bottom: $size-value !important;
            }
        }

        @for $size from 1 through $grid-columns {
            $column-point: '#{$infix}-#{$size}';
            .col#{$column-point} {
                width: 100% * ($size / $grid-columns)
            }
        }
    }
}

.form-group {
    margin-bottom: $spacer;
}

.form-control {
    display: block;
    width: 100%;
}

input:not([type="checkbox"]) {
    padding: $spacer / 2;
}

button, input[type="submit"] {
}

button, input {
    &:disabled {
        opacity: .75;
        cursor: not-allowed;
    }
    &:active {

    }
}
